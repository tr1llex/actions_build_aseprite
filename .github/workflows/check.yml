name: Check Versions
on:
  schedule:
    - cron:  '30 1 1,15 * *'
  workflow_dispatch:
    inputs:
      name:
        description: 'Run?'
        required: true
        default: 'YES!'
jobs:
  get-version:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Fetch release version
        run: |
          curl -s https://api.github.com/repos/Insouciant21/actions_build_aseprite/releases/latest --header 'authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' | jq -r ".tag_name"  > release-versions/version.json
          curl -s https://api.github.com/repos/aseprite/aseprite/releases/latest --header 'authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' | jq -r ".tag_name" > release-versions/version-check.json
      - name: Check for new version
        id: git-check
        run: echo "modified=$(if diff release-versions/version.json release-versions/version-check.json -q; then echo "false"; fi)"  >> $GITHUB_OUTPUT
      - name: Import GPG
        if: steps.git-check.outputs.modified != 'false'
        uses: crazy-max/ghaction-import-gpg@v1.4.1
        with:
          git_user_signingkey: true
          git_commit_gpgsign: true
          git_tag_gpgsign: true
          git_committer_name: Insouciant21
          git_committer_email: 48847364+Insouciant21@users.noreply.github.com
        env:
          GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}
      - name: Git commit
        if: steps.git-check.outputs.modified != 'false'
        run: |
          curl -sL https://api.github.com/repos/aseprite/aseprite/releases/latest --header 'authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' | jq -r ".tag_name" > release-versions/version.json
          rm -rf release-versions/version-check.json
          git config --global commit.gpgsign true
          git config --global user.email "48847364+Insouciant21@users.noreply.github.com"
          git config --global user.name "Insouciant21"
          git add .
          git commit -S -m "new version released"
          git push
      - name: Repository Dispatch
        if: steps.git-check.outputs.modified != 'false'
        uses: peter-evans/repository-dispatch@v1
        with:
          token: ${{ secrets.work1 }}
          event-type: new-release
